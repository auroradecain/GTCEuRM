GTCEuStartupEvents.registry('gtceu:recipe_type', event=>{
    event.create('synthetic_fluid')
        .category('fluid_synthesize')
        .setEUIO('in')
        .setMaxIOSize(1, 1, 0, 4)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW_MULTIPLE, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.CHEMICAL)

    event.create('synthetic_solid')
        .category('solid_synthesize')
        .setEUIO('in')
        .setMaxIOSize(1, 1, 4, 0)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW_MULTIPLE, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.CHEMICAL)
})

GTCEuStartupEvents.registry('gtceu:machine', event=>{
    event.create('synthetic_fluid_rig', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('synthetic_fluid')
        .appearanceBlock(GTBlocks.CASING_STEEL_SOLID)
        .pattern(definition => FactoryBlockPattern.start()
            .aisle('AAA', '#C#', "#C#", "###", "###")
            .aisle("AAA", "C C", "C C", "#C#", "#C#")
            .aisle("A@A", "#C#", "#C#", "###", "###")
            .where('@', Predicates.controller(Predicates.blocks(definition.get())))
            .where('C', Predicates.blocks(GTBlocks.CASING_STEEL_SOLID.get()))
            .where('A', Predicates.blocks(GTBlocks.CASING_STEEL_SOLID.get()).setMinGlobalLimited(4))
                .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                .or(Predicates.abilities(PartAbility.MAINTENANCE).setMaxGlobalLimited(1))
            .where(" ", Predicates.air())
            .where("#", Predicates.any())
            .build()
        .workableCasingRenderer("gtceu:block/casings/solid/machine_casing_solid_steel", "gtceu:block/multiblock/implosion_compressor", false)
    )

    event.create('synthetic_solid_rig', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('synthetic_solid')
        .appearanceBlock(GTBlocks.CASING_STEEL_SOLID)
        .pattern(definition => FactoryBlockPattern.start()
            .aisle('BBB', '#D#', "#D#", "###", "###")
            .aisle("BBB", "D D", "D D", "#D#", "#D#")
            .aisle("B$B", "#D#", "#D#", "###", "###")
            .where('$', Predicates.controller(Predicates.blocks(definition.get())))
            .where('C', Predicates.blocks(GTBlocks.CASING_STEEL_SOLID.get()))
            .where('B', Predicates.blocks(GTBlocks.CASING_STEEL_SOLID.get()).setMinGlobalLimited(4))
                .or(Predicates.autoAbilities(definition.getRecipeTypes()))
                .or(Predicates.abilities(PartAbility.MAINTENANCE).setMaxGlobalLimited(1))
            .where(" ", Predicates.air())
            .where("#", Predicates.any())
            .build()
        .workableCasingRenderer("gtceu:block/casings/solid/machine_casing_solid_steel", "gtceu:block/multiblock/large_chemical_reactor", false)
    )

})